/* Importing Google Fonts */
@import url("https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@300;700&display=swap");

/* Applying font smoothing and setting the default font family */
* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  font-family: "Josefin sans", Arial, Helvetica, sans-serif;
}

/* Styling the body element */
body {
  margin: 0;
  height: 100svh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* Styling the container element */
.container {
  text-align: center;
  position: relative;
  z-index: 1;
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
}

/* Styling the heading element */
h1 {
  font-size: 6vw;
  font-weight: 700;
  color: #333;
}

/* Styling the quote container */
.quote-container {
  background-color: rgba(255, 255, 255, 0.5);
  margin: 0em 15vh;
  padding: 2.5vh 3.5em;
  border-radius: 30px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(10px);
}

/* Styling the quote text */
.quote-text {
  font-size: 3vw;
  font-weight: 700;
  color: #555;
  margin-bottom: 10px;
  line-height: 1.1em;
}

/* Styling the quote author */
.quote-author {
  font-size: 2.2em;
  font-weight: 300;
  color: #777;
}

/* Styling the gradient button */
.gradient-button {
  margin-bottom: 1vh;
  /* Setting the background gradient */

  background-image: linear-gradient(
    to right,
    #25aae1,
    #40e495,
    #30dd8a,
    #ddd430
  );
  background-size: 300% 100%;
  box-shadow: 0 4px 15px 0 rgba(49, 196, 190, 0.75);

  /* Setting the font family, weight, and size */
  font-family: "Josefin sans", Arial, Helvetica, sans-serif;
  font-weight: 700;
  font-size: 1.2em;

  /* Setting the text color, border, padding, and border radius */
  color: white;
  border: none;
  padding: 1.7vh 5vh;
  border-radius: 18px;

  /* Making the width fit the content and setting the cursor to a pointer */
  width: fit-content;
  cursor: pointer;

  /* Adding transition for smooth animation */
  -moz-transition: all 0.4s ease-in-out;
  -o-transition: all 0.4s ease-in-out;
  -webkit-transition: all 0.4s ease-in-out;
  transition: all 0.4s ease-in-out;
}

/* Styling the gradient button on hover and focus */
.gradient-button:hover {
  background-position: 100% 0;
  -moz-transition: all 0.4s ease-in-out;
  -o-transition: all 0.4s ease-in-out;
  -webkit-transition: all 0.4s ease-in-out;
  transition: all 0.4s ease-in-out;
}

/* Styling the gradient button on active state */
.gradient-button:active {
  background: #b6ff89;
}

/* Styling the background shapes */
.background-shapes {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  overflow: hidden;
}

.shape {
  /* Setting the position and size of the shape */
  position: absolute;
  width: max(55px, 7vw);
  height: max(55px, 7vw);
  opacity: 1;

  /* Setting the animation properties for shape movement */
  animation: shapeMovement 8s infinite alternate;
  animation-timing-function: cubic-bezier(0.42, 0, 0.53, 0.99);
}
/* * The max() CSS function is like a magic tool that helps us choose the biggest value between two options.
It's used to determine the size of the shapes: 
We have two options: 55 pixels and 9% of the viewport width.
So, max(55px, 9vw) means the size of the shape will be the bigger value between 55 pixels and 9% of the  viewport width.
For example, 
-If the viewport is very wide, let's say 1000 pixels, the shape will be 9% of 1000 pixels, which is 90 pixels,
because that's bigger than 55 pixels. 
-But if the viewport is narrow, like 300 pixels, the shape will be 55 pixels,
because that's bigger than 9% of 300 pixels, which is only 27 pixels.
==> Even when the viewport is narrow the shape won't become too small ðŸŽ‰
*/

/* Styling the square shape */
.shape-square {
  background-color: #ffc371;
  transform-origin: center;
}

/* Styling the circle shape */
.shape-circle {
  background-color: #ff5f6d;
  border-radius: 50%;
  transform-origin: center;
}

/* Styling the triangle shape */
.shape-triangle {
  background-color: #8d82ff;
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
  transform-origin: center;
}

/* Styling the hexagon shape */
.shape-hexagon {
  background-color: #82ff9e;
  clip-path: polygon(25% 5%, 75% 5%, 100% 50%, 75% 95%, 25% 95%, 0% 50%);
  transform-origin: center;
}

/* Setting the animation keyframes for shape movement */
@keyframes shapeMovement {
  0% {
    transform: translate(-10px, -10px) rotate(0deg);
  }
  50% {
    transform: translate(10px, 10px);
  }
  100% {
    transform: translate(-10px, -10px) rotate(360deg);
  }
}

/* Setting the positioning and animation duration for each shape */

/* * Imagine you have a bunch of items lined up in a row, like books on a shelf.
 The :nth-child selector is a way to pick a specific item from that row based on its position. 
 Let's say you want to select the third book, a famous work by Kafka. 
 You can use the :nth-child(3) selector to pick that book specifically. 
 It's like saying, "Hey, give me the book that is in the third position",
 so any styles you write will only be applied to that book! (meaning our selected element)
 */
.shape:nth-child(1) {
  top: 53%;
  left: 56%;
  animation-duration: 4.2s;
  transform: rotate(20deg);
}

.shape:nth-child(2) {
  top: 9%;
  left: 87%;
  animation-duration: 5.7s;
}

.shape:nth-child(3) {
  top: 25%;
  left: 42%;
  animation-duration: 7.4s;
}

.shape:nth-child(4) {
  top: 34%;
  left: 8%;
  animation-duration: 6.1s;
}

.shape:nth-child(5) {
  top: 57%;
  left: 88%;
  animation-duration: 8.3s;
}

.shape:nth-child(6) {
  top: 75%;
  left: 47%;
  animation-duration: 4.9s;
}

.shape:nth-child(7) {
  top: 75%;
  left: 3%;
  animation-duration: 7.6s;
}

.shape:nth-child(8) {
  top: 12%;
  left: 24%;
  animation-duration: 5.3s;
}

.shape:nth-child(9) {
  top: 80%;
  left: 86%;
  animation-duration: 4.7s;
}

.shape:nth-child(10) {
  bottom: 2%;
  left: 28%;
  animation-duration: 6.8s;
}

.shape:nth-child(11) {
  top: 32%;
  left: 75%;
  animation-duration: 7.2s;
}

.shape:nth-child(12) {
  top: 3%;
  left: 62%;
  animation-duration: 5.5s;
}

.shape:nth-child(13) {
  top: 5%;
  left: 3%;
  animation-duration: 6.5s;
}

.shape:nth-child(14) {
  top: 76%;
  left: 70%;
  animation-duration: 8s;
}

.shape:nth-child(15) {
  top: 44%;
  left: 30%;
  animation-duration: 4s;
}

/* Media query for mobile devices with a maximum width of 480px */
@media (max-width: 480px) {
  /* Adjusting the styling of the quote container for mobile */
  .quote-container {
    margin: 2em 1em;
    padding: 2em 1.2em;
  }

  /* Adjusting the font size of the heading for mobile */
  h1 {
    font-size: 2.6em;
  }

  /* Adjusting the font size and flex shrink for the quote text for mobile */
  .quote-text {
    font-size: 4vh;
    flex-shrink: 1;
  }

  /* Adjusting the font size of the quote author for mobile */
  .quote-author {
    font-size: 1.2em;
  }

  /* Adjusting the font size of the quote button for mobile */
  .gradient-button {
    font-size: 1em;
  }
}
